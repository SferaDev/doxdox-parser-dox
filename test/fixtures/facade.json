[
    {
        "uid": "facade.js-facade",
        "isPrivate": false,
        "type": "function",
        "name": "Facade",
        "description": "Creates a new Facade.js object with either a preexisting canvas tag or a unique name, width, and height.",
        "params": "[canvas, width, height]",
        "tags": {
            "example": [
                "var stage = new Facade(document.querySelector('canvas'));",
                "var stage = new Facade('stage', 500, 300);"
            ],
            "param": [
                {
                    "name": "canvas",
                    "isOptional": true,
                    "types": [
                        "Object",
                        "String"
                    ],
                    "description": "Reference to an HTML canvas element or a unique name."
                },
                {
                    "name": "width",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Width of the canvas."
                },
                {
                    "name": "height",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Height of the canvas."
                }
            ],
            "property": [
                {
                    "name": "canvas",
                    "types": [
                        "Object"
                    ],
                    "description": "Reference to the canvas element."
                },
                {
                    "name": "context",
                    "types": [
                        "Object"
                    ],
                    "description": "Reference to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\" target=\"_blank\">CanvasRenderingContext2D</a> object."
                },
                {
                    "name": "dt",
                    "types": [
                        "Integer"
                    ],
                    "description": "Current time in milliseconds since last canvas draw."
                },
                {
                    "name": "fps",
                    "types": [
                        "Integer"
                    ],
                    "description": "Current frames per second."
                },
                {
                    "name": "ftime",
                    "types": [
                        "Integer"
                    ],
                    "description": "Time of last canvas draw."
                }
            ],
            "return": [
                {
                    "types": [
                        "Object"
                    ],
                    "description": "New Facade.js object."
                }
            ]
        }
    },
    {
        "uid": "facade.js-facade.prototype.addtostage",
        "isPrivate": false,
        "type": "method",
        "name": "Facade.addToStage",
        "description": "Draws a Facade.js entity (or multiple entities) to the stage.",
        "params": "obj[, options]",
        "tags": {
            "example": [
                "stage.addToStage(circle);",
                "stage.addToStage(circle, { x: 100, y: 100 });"
            ],
            "param": [
                {
                    "name": "obj",
                    "isOptional": false,
                    "types": [
                        "Object",
                        "Array"
                    ],
                    "description": "Facade.js entity or an array of entities."
                },
                {
                    "name": "options",
                    "isOptional": true,
                    "types": [
                        "Object"
                    ],
                    "description": "Temporary options for rendering a Facade.js entity (or multiple entities)."
                }
            ],
            "property": [],
            "return": [
                {
                    "types": [
                        "Object"
                    ],
                    "description": "Facade.js object."
                }
            ]
        }
    },
    {
        "uid": "facade.js-facade.polygon",
        "isPrivate": false,
        "type": "method",
        "name": "Facade.Polygon",
        "description": "Create a polygon object. Inherits all methods from <b>Facade.Entity</b>.\n\n```\nvar polygon = new Facade.Polygon({\n    x: 0,\n    y: 0,\n    points: [ [100, 0], [200, 100], [100, 200], [0, 100] ],\n    lineWidth: 10,\n    strokeStyle: '#333E4B',\n    fillStyle: '#1C73A8',\n    anchor: 'top/left'\n});\n```",
        "params": "[options]",
        "tags": {
            "example": [],
            "param": [
                {
                    "name": "options",
                    "isOptional": true,
                    "types": [
                        "Object"
                    ],
                    "description": "Options to create the polygon with."
                },
                {
                    "name": "options.anchor",
                    "isOptional": true,
                    "types": [
                        "String"
                    ],
                    "description": "Position to anchor the polygon. <i>Default:</i> \"top/left\"<br><ul><li>top/left</li><li>top/center</li><li>top/right</li><li>center/left</li><li>center</li><li>center/right</li><li>bottom/left</li><li>bottom/center</li><li>bottom/right</li></ul>"
                },
                {
                    "name": "options.closePath",
                    "isOptional": true,
                    "types": [
                        "Boolean"
                    ],
                    "description": "Boolean to determine if the polygon should be self closing or not. <i>Default:</i> true"
                },
                {
                    "name": "options.fillStyle",
                    "isOptional": true,
                    "types": [
                        "String"
                    ],
                    "description": "Fill color for the polygon. Can be a text representation of a color, HEX, RGB(a), HSL(a). <i>Default:</i> \"#000\"<br><ul><li>HTML Colors: red, green, blue, etc.</li><li>HEX: #f00, #ff0000</li><li>RGB(a): rgb(255, 0, 0), rgba(0, 255, 0, 0.5)</li><li>HSL(a): hsl(100, 100%, 50%), hsla(100, 100%, 50%, 0.5)</li></ul>"
                },
                {
                    "name": "options.lineCap",
                    "isOptional": true,
                    "types": [
                        "String"
                    ],
                    "description": "The style of line cap. <i>Default:</i> \"butt\"<br><ul><li>butt</li><li>round</li><li>square</li></ul>"
                },
                {
                    "name": "options.lineJoin",
                    "isOptional": true,
                    "types": [
                        "String"
                    ],
                    "description": "The style of line join. <i>Default:</i> \"miter\"<br><ul><li>miter</li><li>round</li><li>bevel</li></ul>"
                },
                {
                    "name": "options.lineWidth",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Width of the stroke. <i>Default:</i> 0"
                },
                {
                    "name": "options.opacity",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Opacity of the polygon. Integer between 0 and 100. <i>Default:</i> 100"
                },
                {
                    "name": "options.points",
                    "isOptional": true,
                    "types": [
                        "Array"
                    ],
                    "description": "Multi-dimensional array of points used to render a polygon. Point arrays with 2 values is rendered as a line, 5 values is rendered as an arc and 6 values is rendered as a bezier curve."
                },
                {
                    "name": "options.rotate",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Degrees to rotate the polygon. <i>Default:</i> 0"
                },
                {
                    "name": "options.scale",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "A float representing the scale of a polygon. <i>Default:</i> 1"
                },
                {
                    "name": "options.strokeStyle",
                    "isOptional": true,
                    "types": [
                        "String"
                    ],
                    "description": "Color of a polygon's stroke. Can be a text representation of a color, HEX, RGB(a), HSL(a). <i>Default:</i> \"#000\"<br><ul><li>HTML Colors: red, green, blue, etc.</li><li>HEX: #f00, #ff0000</li><li>RGB(a): rgb(255, 0, 0), rgba(0, 255, 0, 0.5)</li><li>HSL(a): hsl(100, 100%, 50%), hsla(100, 100%, 50%, 0.5)</li></ul>"
                },
                {
                    "name": "options.x",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "X coordinate to position the polygon. <i>Default:</i> 0"
                },
                {
                    "name": "options.y",
                    "isOptional": true,
                    "types": [
                        "Integer"
                    ],
                    "description": "Y coordinate to position the polygon. <i>Default:</i> 0"
                }
            ],
            "property": [],
            "return": [
                {
                    "types": [
                        "Object"
                    ],
                    "description": "New Facade.Polygon object."
                }
            ]
        }
    },
    {
        "uid": "facade.js-facade.polygon.prototype._defaultoptions",
        "isPrivate": true,
        "type": "method",
        "name": "Facade.Polygon._defaultOptions",
        "description": "Returns a default set of options common to all Facade.js polygon entities.",
        "params": "updated",
        "tags": {
            "example": [
                "console.log(Facade.Polygon.prototype._defaultOptions());"
            ],
            "param": [
                {
                    "name": "updated",
                    "isOptional": false,
                    "types": [
                        "Object"
                    ],
                    "description": "Additional options as key-value pairs."
                }
            ],
            "property": [],
            "return": [
                {
                    "types": [
                        "Object"
                    ],
                    "description": "Default set of options."
                }
            ]
        }
    },
    {
        "uid": "facade.js-facade.polygon.prototype._draw",
        "isPrivate": true,
        "type": "method",
        "name": "Facade.Polygon._draw",
        "description": "Renders a polygon entity to a canvas.",
        "params": "facade, options, metrics",
        "tags": {
            "example": [
                "polygon._draw(facade, options, metrics);"
            ],
            "param": [
                {
                    "name": "facade",
                    "isOptional": false,
                    "types": [
                        "Object"
                    ],
                    "description": "Facade.js object."
                },
                {
                    "name": "options",
                    "isOptional": false,
                    "types": [
                        "Object"
                    ],
                    "description": "Options used to render the polygon."
                },
                {
                    "name": "metrics",
                    "isOptional": false,
                    "types": [
                        "Object"
                    ],
                    "description": "Metrics used to render the polygon."
                }
            ],
            "property": [],
            "return": [
                {
                    "types": [
                        "Void"
                    ],
                    "description": ""
                }
            ]
        }
    }
]